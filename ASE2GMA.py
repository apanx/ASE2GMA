import sys
import os
import re
import struct

def main(argv):
    GMA_boilerplate
    if len(argv) > 1:
        filename = argv[1]

    else:
        from Tkinter import Tk
        from tkFileDialog import askopenfilename
        
        Tk().withdraw()
        filename = askopenfilename(filetypes=[('ASE-model', '*.ase'), ('All files', '*.*')])
        if filename =='':
            sys.exit(0)

    ASE_file = open(filename, 'r')
    ASE_data = ASE_file.readlines()
    ASE_file.close

    startcurly = re.compile(r'(\s*)(.+)\s{$')
    meshsmoothing = re.compile(r'AB:.+?BC:.+?CA:.+?MESH_SMOOTHING.+?MESH')
    meshface = re.compile(r'MESH_FACE\s*([0-9]+):\s*A:\s*([0-9]+)\s*B:\s*([0-9]+)\s*C:\s*([0-9]+)\s*\*MESH_MTLID\s*([0-9]+)')
    RGBcolor = re.compile(r'(\s*)(\*MATERIAL.+|\*SCENE.+|\*LIGHT.+)\s([0-9.]+)\t([0-9.]+)\t([0-9.]+)')
    remove = re.compile(r'(.+INHERIT_.+|.+TM_POS.+|.+TM_ROT.+|.+TM_SCALE.+|.+PROP_.+|.+MAP_SUBNO.+)\n')
    fix_path =  re.compile(r'(.+)BITMAP "(.+)"')
    remove_quotes = re.compile(r'"(.+)"')
    fix_backfacecull = re.compile(r'(.+)MATERIAL_REF (.+)')

    for index, line in enumerate(ASE_data):
        ASE_data[index] = startcurly.sub(r'\1\2\n\1{', line)
        ASE_data[index] = meshsmoothing.sub(r'\t*MESH', ASE_data[index])
        ASE_data[index] = meshface.sub(r'MESH_FACE\t\1\tA:\t\2\tB:\t\3\tC:\t\4\t*MESH_MTLID\t\5', ASE_data[index])
        color = RGBcolor.match(ASE_data[index])
        if color:
            hexcolor = int(float(color.group(3)) * 0xff) * 0x10000 + int(float(color.group(4)) * 0xff) * 0x100 + int(float(color.group(5)) * 0xff)
            hexcolor = hex(hexcolor)
            ASE_data[index] = "{}{}\t{}\n".format(color.group(1), color.group(2), hexcolor)
        ASE_data[index] = remove.sub('', ASE_data[index])
        map_path = fix_path.match(ASE_data[index])
        if map_path:
            ASE_data[index] = "{}BITMAP {}\n".format(map_path.group(1), os.path.basename(map_path.group(2)))
        material_ref = fix_backfacecull.match(ASE_data[index])
        if material_ref:
            ASE_data[index] = "{}BACKFACE_CULL\t1\n{}MATERIAL_REF\t{}\n".format(material_ref.group(1), material_ref.group(1), material_ref.group(2))
        ASE_data[index] = remove_quotes.sub(r'\1', ASE_data[index])

    GMA_file = open(os.path.splitext(filename)[0] + ".gma", "w")
    GMA_file.writelines(GMA_boilerplate.decode('hex'))
    GMA_file.writelines(ASE_data)
    GMA_file.close

    print "Conversion complete"
    sys.exit(0)

if __name__ == "__main__":
    main(sys.argv)